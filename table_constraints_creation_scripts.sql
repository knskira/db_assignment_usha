-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.categories
(
    "categoryID" integer NOT NULL,
    "categoryName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY ("categoryID")
);

CREATE TABLE IF NOT EXISTS public.customers
(
    "customerID" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "companyName" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "contactName" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "contactTitle" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    country character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT customers_pkey PRIMARY KEY ("customerID")
);

CREATE TABLE IF NOT EXISTS public.employees
(
    "employeeID" serial NOT NULL,
    "employeeName" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    title character varying(100) COLLATE pg_catalog."default" NOT NULL,
    city character varying(100) COLLATE pg_catalog."default" NOT NULL,
    country character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "reportsTo" integer,
    CONSTRAINT employees_pkey PRIMARY KEY ("employeeID")
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    "orderID" integer NOT NULL,
    "productID" integer NOT NULL,
    "unitPrice" numeric(5, 2) NOT NULL,
    quantity integer NOT NULL,
    discount numeric(4, 2),
    CONSTRAINT pk_order_details PRIMARY KEY ("orderID", "productID")
);

CREATE TABLE IF NOT EXISTS public.orders
(
    "orderID" integer NOT NULL,
    "customerID" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "employeeID" integer NOT NULL,
    "orderDate" date NOT NULL,
    "requiredDate" date NOT NULL,
    "shippedDate" date,
    "shipperID" integer NOT NULL,
    freight numeric(10, 2),
    CONSTRAINT orders_pkey PRIMARY KEY ("orderID")
);

CREATE TABLE IF NOT EXISTS public.products
(
    "productID" serial NOT NULL,
    "productName" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "quantityPerUnit" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "unitPrice" numeric(10, 2) NOT NULL,
    discontinued integer NOT NULL,
    "categoryID" integer NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY ("productID")
);

CREATE TABLE IF NOT EXISTS public.shippers
(
    "shipperID" serial NOT NULL,
    "companyName" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT shippers_pkey PRIMARY KEY ("shipperID")
);

ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT fk_orders FOREIGN KEY ("orderID")
    REFERENCES public.orders ("orderID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT fk_products FOREIGN KEY ("productID")
    REFERENCES public.products ("productID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_customerid FOREIGN KEY ("customerID")
    REFERENCES public.customers ("customerID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_employeeid FOREIGN KEY ("employeeID")
    REFERENCES public.employees ("employeeID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_shipperid FOREIGN KEY ("shipperID")
    REFERENCES public.shippers ("shipperID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fk_categoryid FOREIGN KEY ("categoryID")
    REFERENCES public.categories ("categoryID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;